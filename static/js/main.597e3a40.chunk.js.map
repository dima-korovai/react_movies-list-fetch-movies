{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","index.tsx"],"names":["MovieCard","_ref","movie","description","title","imdbId","imgUrl","imdbUrl","concat","_jsxs","className","children","_jsx","src","alt","href","MoviesList","movies","map","FindMovie","errorMessage","onChangeSearch","query","searchMovie","onBackspacePress","foundMovie","isLoading","addingMovie","resetForm","moviesList","onHideErrorMessage","_Fragment","onSubmit","event","preventDefault","trim","length","htmlFor","type","id","placeholder","cn","value","onChange","target","onKeyDown","code","disabled","onClick","find","movieInList","App","_useState","useState","_useState2","_slicedToArray","setFoundMovie","_useState3","_useState4","setQuery","_useState5","_useState6","startSearchingMovie","setStartSearchingMovie","_useState7","_useState8","setErrorMessage","_useState9","_useState10","setIsloading","_useState11","_useState12","setMoviesList","useEffect","fetch","then","res","json","catch","Response","Error","getMovie","response","Title","Plot","Poster","imdbID","finally","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.597e3a40.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    description,\n    title,\n    imdbId,\n    imgUrl,\n  } = movie;\n\n  const imdbUrl = `https://www.imdb.com/title/${imdbId}`;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  errorMessage: string,\n  onChangeSearch: (value: string) => void,\n  query: string,\n  searchMovie: () => void,\n  onBackspacePress: () => void,\n  foundMovie: Movie | null,\n  isLoading: boolean,\n  addingMovie: (movie: Movie) => void,\n  resetForm: () => void,\n  moviesList: Movie[],\n  onHideErrorMessage: () => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  errorMessage,\n  onChangeSearch,\n  query,\n  searchMovie,\n  onBackspacePress,\n  foundMovie,\n  isLoading,\n  addingMovie,\n  resetForm,\n  moviesList,\n  onHideErrorMessage,\n}) => {\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (query.trim().length) {\n      searchMovie();\n    }\n  };\n\n  const onAddingMovieHandler = () => {\n    if (foundMovie) {\n      const existingMovie = moviesList.find(\n        movieInList => movieInList.imdbId === foundMovie.imdbId,\n      );\n\n      if (!existingMovie) {\n        addingMovie(foundMovie);\n      }\n\n      resetForm();\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn(\n                'input',\n                {\n                  'is-danger': errorMessage.length,\n                },\n              )}\n              value={query}\n              onChange={(event) => {\n                onChangeSearch(event.target.value);\n                onHideErrorMessage();\n              }}\n              onKeyDown={(event) => {\n                if (event.code === 'Backspace') {\n                  onBackspacePress();\n                }\n              }}\n            />\n          </div>\n        </div>\n\n        {\n          errorMessage.length > 0 && (\n            <>\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                {errorMessage}\n              </p>\n              <br />\n            </>\n          )\n        }\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={query.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={onAddingMovieHandler}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {!!foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { getMovie } from './api';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [startSearchingMovie, setStartSearchingMovie] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsloading] = useState(false);\n  const [moviesList, setMoviesList] = useState<Movie[]>([]);\n\n  const changeTitle = (value: string) => setQuery(value);\n\n  const addMovie = (movie: Movie) => {\n    const movies = [...moviesList];\n\n    return setMoviesList([...movies, movie]);\n  };\n\n  const resetForm = () => {\n    setQuery('');\n    setFoundMovie(null);\n    setErrorMessage('');\n  };\n\n  useEffect(() => {\n    if (startSearchingMovie) {\n      setIsloading(true);\n\n      getMovie(query)\n        .then(response => {\n          if ('Error' in response) {\n            setErrorMessage(\"Can't find a movie with such a title\");\n          } else if ('Title' in response) {\n            setFoundMovie({\n              title: response.Title,\n              description: response.Plot,\n              imgUrl: response.Poster,\n              imdbUrl: '',\n              imdbId: response.imdbID,\n            });\n          }\n        })\n        .finally(() => {\n          setStartSearchingMovie(false);\n          setIsloading(false);\n        });\n    }\n  }, [query, startSearchingMovie]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n\n        <MoviesList movies={moviesList} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          errorMessage={errorMessage}\n          onChangeSearch={changeTitle}\n          query={query}\n          searchMovie={() => setStartSearchingMovie(true)}\n          onBackspacePress={() => setErrorMessage('')}\n          foundMovie={foundMovie}\n          isLoading={isLoading}\n          addingMovie={addMovie}\n          resetForm={resetForm}\n          moviesList={moviesList}\n          onHideErrorMessage={() => setErrorMessage('')}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=803b5dad';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}